function handleTouchStart(e){startHoldingWaiter(e.target.closest('li'))}function handleTouchMove(e){requestAnimationFrame(()=>{if(!holding)return;document.documentElement.classList.add('noscroll'),itemNewIndex=0;let t=e.touches?e.touches[0].pageY:e.clientY;holding.classList.add('drug');for(let e of $$('li:not(.drug)')){let c=e.getBoundingClientRect(),l=c.top+c.height/2>t;e.classList.toggle('shift',l),l||(itemNewIndex+=1)}})}function handleTouchEnd(e){if(holding){let e=checklist.items.find(e=>e.id==holding.id),t=checklist.items.indexOf(e);checklist.items.splice(t,1),checklist.items.splice(itemNewIndex,0,e),render()}clearTimeout(holdingWaiter),document.documentElement.classList.remove('noscroll'),$$('li').forEach(e=>e.className=''),holding=!1}function render(){checklist.element.innerHTML='',checklist.items.forEach((e,t)=>{let c=document.createElement('li');c.id=e.id;let l=document.createElement('input');l.type='checkbox',l.checked=e.done,l.oninput=(t=>e.toggleDone(t.target.checked)),l.onmousedown=handleTouchStart,l.ontouchstart=handleTouchStart;let n=document.createElement('input');n.type='text',n.value=e.name,n.placeholder='Untitled',n.oninput=(t=>e.rename(t.target.value)),n.onkeydown=(t=>{let c=t.target,l=c.value,n=c.selectionEnd,i=checklist.items.indexOf(e),s=i-1,o=i+1;switch(t.key){case'Backspace':if(0===n){let t=checklist.items[s],c=t?t.name:'';t&&t.rename(c+l),e.delete(),t&&checklist.focusTo(s,c.length)}break;case'Enter':let c=l.slice(n),a=i+1;e.rename(l.substr(0,n)),checklist.addItem(new Item({name:c}),a),checklist.focusTo(a,0);break;case'ArrowUp':t.preventDefault(),checklist.items[s]&&checklist.focusTo(s,n);break;case'ArrowDown':t.preventDefault(),checklist.items[o]&&checklist.focusTo(o,n)}}),c.append(l),c.append(n),checklist.element.append(c),checklist.save()})}const $=e=>document.getElementById(e),$$=e=>document.querySelectorAll(e),checklistElement=$('checklist'),defaultTheme='day';let holdingWaiter,holding=!1,itemNewIndex=0,startHoldingWaiter=e=>holdingWaiter=setTimeout(()=>holding=e,150);class Checklist{constructor(e,t){this.element=e,this.items=t||[]}save(){localStorage.setItem('checklist',JSON.stringify(this.items))}focusTo(e,t){setTimeout(()=>{let c=$(this.items[e].id).querySelector('input[type="text"]');c.focus(),c.setSelectionRange(t,t)},20)}addItem(e=new Item,t=this.items.length){this.items.splice(t,0,e),render(),this.focusTo(t)}}class Item{constructor(e={}){this.id=Math.round((new Date).getTime()/Math.random()),this.name=e.name||'',this.done=e.done||!1}setDone(e){this.done=e}toggleDone(){this.setDone(!this.done)}rename(e){this.name=e}delete(){let e=checklist.items.indexOf(this);checklist.items.splice(e,1),render()}}const locallySavedChecklist=localStorage.getItem('checklist'),locallySavedTheme=localStorage.getItem('theme'),initialItems=locallySavedChecklist?JSON.parse(locallySavedChecklist).map(e=>new Item(e)):[new Item],checklist=new Checklist(checklistElement,initialItems);document.body.classList.add(locallySavedTheme||defaultTheme),$$('[data-theme]').forEach(e=>e.addEventListener('click',()=>{let t=e.getAttribute('data-theme');document.body.className=t,localStorage.setItem('theme',t)})),addEventListener('beforeunload',()=>checklist.save()),addEventListener('touchmove',handleTouchMove),addEventListener('mousemove',handleTouchMove),addEventListener('mouseup',handleTouchEnd),addEventListener('touchend',handleTouchEnd),render(),setInterval(()=>checklist.save(),1e3);